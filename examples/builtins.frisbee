from sockets import TCPServer;
from merge import MergeSort;


active Client {
   val conn;

   def val get_res(val items, val part) {
        this.conn ! send(items.to_string());
        this ! start();
    }

   def Void start() {
      val array;
      val strings;

      val x <= this.conn ! get();
      array = [];

      strings = x.split(" ");
      val i = 0;
      while (i < strings.length()) {
        array = [strings[i].to_int()] + array;
        i = i + 1;
      }
      val sorter = spawn MergeSort(array, this, void, void, void);

      sorter ! merge_sort();  # Will return to get_res #
   }
}


active Main {
   def Void connect(val conn) {
       io ! print("New connection: ", conn);
       Client x = spawn Client(conn);

       x ! start();
   }

   def Void run() {
     val s = spawn TCPServer(9967, this);
     s ! start();
   }
}