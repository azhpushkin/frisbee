from sockets import TCPServer;
from merge import MergeSort;


active Client {
   val conn;

   def val get_res(val items, val part) {
        this.conn ! send(items);
    }

   def Void start() {

       val array;
       val strings;

       val waiting = false;
       while(not waiting) {
          val x <= this.conn ! get();
          array = [];

          strings = x.split(" ");
          val i = 0;
          while (i < strings.length()) {
            array = [strings[i].to_int()] + array;
            i = i + 1;
          }
          val sorter = spawn MergeSort(array, this, void, void, void);

          sorter ! merge_sort();  # Will return to get_res #
          waiting = true;
       }
   }
}


active Main {
   def Void run() {
     val s = spawn TCPServer(9999);

     while (true) {
        val conn <= s ! accept();
        io ! print("New connection: ", conn);

		val x = (spawn Client(conn));
		x ! start();

     }

   }
}